.data
answer:	.word 0x00001234
guess:  .word 0x00001234
bullsstring:	.asciiz "Number of bulls that you currently have: "
cowstring:	.asciiz "\nNumber of cows that you currently have: "
bullcounter: .word
cowcounter: .word

.text
bull:
lw	$s0, answer 			#load answer into $s0
lw	$s1, guess			#load guess into $s1
lw	$s2, bullcounter		#load the number of bulls to s2
lw	$s3, cowcounter			#load the number of cows to s3

mul	$s2, $s2, $0			#make sure we start with 0 bulls
mul	$s3, $s3, $0			#make sure we start with 0 cows

xor	$t0, $s0, $s1			#by xor'ing the answer and the guess, the 0's will be bulls ex 0x6020 bit 3 and 1 are correct

and	$t1, $t0, 0x0000F000		#Mask bit 4 
jal	checkbull
		
and	$t1, $t0, 0x00000F00		#Mask bit 3
jal	checkbull

and	$t1, $t0, 0x000000F0		#Mask bit 2
jal	checkbull

and	$t1, $t0, 0x0000000F		#Mask bit 1	
jal	checkbull

add	$t0, $s1, $zero			#store a copy of our guess into t0 so we don't change our guess in memory
j	cow

checkbull:				#Checks to see if the masked bit is 0, if it is, we branch to addbull
beq	$t1, $0, addbull
jr	$ra

addbull:				#Increments bull counter
addi 	$s2, $s2, 1
jr	$ra

cow:
sll	$t0, $t0, 4			#put modified guess into t0, preserve original guess in s1 still
andi	$t1, $t0, 0x000F0000
srl	$t1, $t1, 16
and	$t0, $t0, 0x0000FFFF
or	$t0, $t0, $t1
addi	$sp, $sp, -4
sw	$t0, 0($sp)

xor	$t1, $s0, $t0			#store our temporary xor answer into t1

and	$t2, $t1, 0x0000F000
jal	checkcow

and	$t2, $t1, 0x00000F00
jal	checkcow

and	$t2, $t1, 0x000000F0
jal	checkcow

and	$t2, $t1, 0x0000000F
jal	checkcow

addi 	$t3, $t3, 1
beq	$t3, 3,   showbulls
j	cow

checkcow:
beq	$t2, $0, addcow
jr	$ra

addcow:
addi	$s3, $s3, 1
jr	$ra


showbulls:			#Display the number of bulls and cows
li	$v0, 4
la	$a0, bullsstring
syscall

li	$v0, 1
add	$a0, $s2, $zero
syscall

jal	playbulls

li	$v0, 4
la	$a0, cowstring
syscall

li	$v0, 1
add	$a0, $s3, $zero
syscall

jal	playcows

j	finish

playbulls:
beq	$t7, $s2, done
li	$v0, 31
li	$a0, 80
li	$a1, 500
li	$a2, 127
li	$a3, 100
syscall

li	$v0, 32
li	$a0, 400
syscall

addi	$t7, $t7, 1
j	playbulls

done:
jr	$ra

playcows:
beq	$t6, $s3, done2
li	$v0, 31
li	$a0, 80
li	$a1, 500
li	$a2, 56
li	$a3, 100
syscall

li	$v0, 32
li	$a0, 400
syscall

addi	$t6, $t6, 1
j	playcows

done2:
jr	$ra

finish:
