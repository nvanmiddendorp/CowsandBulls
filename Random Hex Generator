		.data

		.text
main: 

random1:	li $a1, 16			# set number between 0-15 
		li $v0, 42			#generating random in twith range
		syscall				#enerate first digit hex number
		
		add $s1, $zero, $a0		#store first digit in $s1
		add $t0, $zero, $s1		#store number in $t0
		
		beq $t0, $zero, random1		#go back if $t0 and $zero are equal
		
		or $s0, $s0, $s1		#or s0 and s1 and store in s0
		sll $s0, $s0, 4			#shift content of s0 to left by 4
						
random2:	li $a1, 16			# number between 0-15 (upper bound in $a1)
		li $v0, 42			# for generate random int  with range
		syscall
		
		add $s1, $zero, $a0		#store first digit in $s2
		add $t1, $zero, $s1		#store number in $t1
		
		beq $t1, $t0, random2		#go back if $t1 and $t0 are equal
		
		or $s0, $s0, $s1		#or s0 and s1 and store in s0
		sll $s0, $s0, 4			#shift the content of s0 to left by 4
		
random3:	li $a1, 16
		li $v0, 42
		syscall
		
		add $s1, $zero, $a0
		add $t2, $zero, $s1
		
		beq $t2, $t0, random3		#go back if $t2 and t0 are equal
		beq $t2, $t1, random3		#go back if $t2 and t1 are equal
		
		or $s0, $s0, $s1		#or s0 and s1 and store in s0
		sll $s0, $s0, 4			#shift the content of s0 to left by 4
		
random4:	li $a1, 16
		li $v0, 42
		syscall
		
		add $s1, $zero, $a0
		add $t3, $zero, $s1
		
		beq $t3, $t0, random4		#go back if $t3 and t0 are equal
		beq $t3, $t1, random4		#go back if $t3 and t1 are equal
		beq $t3, $t2, random4		#go back if $t3 and t2 are equal
		
		or $s0, $s0, $s1		#or s0 and s1 and store in s0
		
						
final: 				
		add $a0, $zero, $s0  		# get the generated 4-digits in a0
		li $v0, 34			# to print the hex
		syscall
		
		 		
